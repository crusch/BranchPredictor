  

           P6 CPI       P8 CPI       Impact of branch predictor

test1     190 cycles   112 cycles    -78 cycles
 
test2     88 cycles    64 cycles     -24 cycles

test3     39 cycles    39 cycles     None

test4     29 cycles    29 cycles     None

test5     306 cycles   132 cycles    -174 cycles

test6     49 cycles    49 cycles     None

test7     108 cycles   108 cycles    None

test8     26 cycles    26 cycles     None

test9     2144 cycles  776 cycles    -1368 cycles

testa     42 cycles    42 cycles     None

testb     119 cycles   107 cycles    -12 cycles

testc     160 cycles   142 cycles    -18 cycles

testd     23 cycles    23 cycles     None

teste     24 cycles    24 cycles     None

testf     24 cycles    24 cycles     None

testg     10 cycles    10 cycles     None

testh     16 cycles    16 cycles     None

testi     31 cycles    31 cycles     None

testj     17 cycles    17 cycles     None

testk     11 cycles    11 cycles     None

testl     339 cycles   165 cycles    -174 cycles

testm     24 cycles    24 cycles     None

testn     24 cycles    24 cycles     None

testo     89 cycles    71 cycles     -18 cycles

testu     731 cycles   425 cycles    -306 cycles

testv     297 cycles   219 cycles    -78 cycles

testw     21350 cycles 21356 cycles   +6 cycles
No improvement because test cycles through large number of jumps a total of 3 times. 
I implemented a 2 level branch predictor, so the predictor needs to run through the 
jumps at least 4 times to initialized the history for each possible jump history. In 
this test, the first time the jumps are run through, they have a history of not taken 
and not taken, and the predictor updates with the outcome, so the next time the jumps 
are not taken and not taken we will predict taken. The next time the jumps are executed, 
they have a history of not taken and taken. Since the predictor hasn't encountered this 
state yet, we see no improvement. The predictor updates the with the outcome, so next 
time the jumps are not taken and taken we will predict taken. The final time the jumps 
are executed, we have a history of taken and taken. This state has not been encountered 
yet, so we see no improvement, but the predictor updates with the outcome. So since the 
jumps are only executed a total of 3 times, we see no improvement because each time the 
predictor has not encountered that state for each pc so it cannot make predictions. If 
the jumps were to be executed a 4th time we could see improvement. 

testz     29192 cycles 29192 cycles    None
Not sure why there isn't any improvement on this test to be honest. It might be a similar 
situation to testw where the predictor hasn't seen enough state to make an improvement. 

Total cycle count    P6      P8       Improvement
                    55502   53258    -2244 cycles


